package projectOne;
//use of swing to create a GUI
//detect when arrow keys are pressed
//keep a count of many times they are pressed

import javax.swing.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class detectArrowKeys {

    public detectArrowKeys() { //this is a constructor

        JFrame frame = new JFrame(); //create a new frame and import javax.swing
        //Most of the stuff below is fairly standard

        //set up the frame
        frame.setVisible(true); //show frame
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); //what happens when close button is pressed
        //size
        frame.setSize(400,400); //in pixels
        frame.setFocusable(true);

        //Need to set up a panel and labels for arrow keys
        JPanel panel = new JPanel();

        JLabel up = new JLabel();
        JLabel down = new JLabel();
        JLabel left = new JLabel();
        JLabel right = new JLabel();

        //use .add to add the labels to the frame
        panel.add(up);
        panel.add(down);
        panel.add(left);
        panel.add(right);

        up.setText("Up");
        down.setText("Down");
        left.setText("Left");
        right.setText("Right");

        //use an event listener to detect key presses
        frame.addKeyListener(new KeyListener() { //will spawn the @override stuff
            int upCount = 0;
            int downCount = 0;
            int leftCount = 0;
            int rightCount = 0;

            @Override
            public void keyTyped(KeyEvent e) {

            }

            @Override
            public void keyPressed(KeyEvent e) {
                int keyCode = e.getKeyCode();
                switch(keyCode){ //switch to detect and act on key presses
                    case KeyEvent.VK_UP: //VK_ will return a specific key on the keyboard
                        up.setText("Up:" + Integer.toString(upCount++)); //need to convert the integer to a string
                        break;
                    case KeyEvent.VK_DOWN:
                        down.setText("Down:" + Integer.toString(downCount++));
                        break;
                    case KeyEvent.VK_LEFT:
                        left.setText("Left:" + Integer.toString(leftCount++));
                        break;
                    case KeyEvent.VK_RIGHT:
                        right.setText("Right:" + Integer.toString(rightCount++));
                        break;
                }

            }

            @Override
            public void keyReleased(KeyEvent e) {

            }
        });

        frame.add(panel);

    }


    public static void main(String[] args){
        new detectArrowKeys(); //this will run the code
        //similar to...
        //ArrayList a = new ArrayList();
    }
}
